name: Build and Release

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, x86_64-pc-windows-msvc, x86_64-apple-darwin]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build rvemu-cli
        run: |
          cargo build --release --target ${{ matrix.target }} --manifest-path lib/rvemu-cli/Cargo.toml
          
          # Rename Windows executable to include .exe extension
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            mv lib/rvemu-cli/target/${{ matrix.target }}/release/rvemu-cli lib/rvemu-cli/target/${{ matrix.target }}/release/rvemu-cli.exe
          fi

      - name: Build rvemu-wasm
        run: |
          curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
          wasm-pack build lib/rvemu-wasm --out-dir public/pkg --target web --no-typescript

      - name: Collect artifacts
        run: |
          mkdir -p artifacts
          
          # Package CLI binaries
          if [[ "${{ matrix.target }}" == *"linux"* ]]; then
            tar czvf artifacts/rvemu-cli-linux-x64.tar.gz -C lib/rvemu-cli/target/${{ matrix.target }}/release rvemu-cli
          elif [[ "${{ matrix.target }}" == *"windows"* ]]; then
            zip -j artifacts/rvemu-cli-windows-x64.zip lib/rvemu-cli/target/${{ matrix.target }}/release/rvemu-cli.exe
          elif [[ "${{ matrix.target }}" == *"apple"* ]]; then
            tar czvf artifacts/rvemu-cli-macos-x64.tar.gz -C lib/rvemu-cli/target/${{ matrix.target }}/release rvemu-cli
          fi
          
          # Package WASM artifacts
          zip -r artifacts/rvemu-wasm-web.zip public/pkg

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.target }}
          path: artifacts

  create-release:
    runs-on: ubuntu-latest
    needs: build-and-release
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: "rvemu ${{ github.sha }}"
          tag_name: release-${{ github.run_id }}
          body: |
            Automated build of rvemu
            Commit: ${{ github.sha }}
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Upload release assets
        run: |
          for asset in artifacts/*; do
            echo "Uploading $asset"
            gh release upload ${{ steps.create_release.outputs.url }} "$asset"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}